Update and Upgrade:

Bash
sudo apt update
sudo apt upgrade -y
Use code with caution.

Install Docker:

Bash
curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh
sudo usermod -aG docker $USER 
Use code with caution.

(Log out and back in for the group change to take effect)

Install kubeadm, kubelet, and kubectl:

Bash
sudo apt-get update && sudo apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg   
 | sudo apt-key add -
cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl   

Use code with caution.

Initialize the Kubernetes Control Plane:

sudo kubeadm init --control-plane-endpoint="LOAD_BALANCER_IP:6443" --upload-certs --pod-network-cidr=10.244.0.0/16
Use code with caution.
###Replace LOAD_BALANCER_IP with the IP address of your load balancer.
###This command initializes the first control plane node and configures it for high availability.
###Save the kubeadm join command that is outputted.
###On the second and third Pis, run the kubeadm join command you saved from the previous step. This will add them to the cluster as control plane nodes.
###Now on the 1st master pi do the below, the rest of the pis will figure it out. 

This sets up the control plane components on your Pi.
Take note of the kubeadm join command that is outputted. You'll need this if you want to add worker nodes later.
Configure kubectl:

Bash
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config   

Use code with caution.

Install a Pod Network:   

Kubernetes requires a pod network for communication between pods. A popular choice is Calico:
Bash
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
Use code with caution.

Verify Installation:

Bash
kubectl get nodes
Use code with caution.

You should see your Pi listed as a node in the Ready state.